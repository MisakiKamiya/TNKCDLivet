<Window x:Class="TNKCDLivet.Views.Pickup"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:TNKCDLivet.Views"
        xmlns:vm="clr-namespace:TNKCDLivet.ViewModels"
        Title="事例抽出画面" Height="720" Width="740">

    <Window.Background>
        <ImageBrush ImageSource = "../img/emoi_haikei.jpg" Stretch="UniformToFill"/>
    </Window.Background>
 
    <Window.DataContext>
        <vm:PickupViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <l:InteractionMessageTrigger MessageKey="Close" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction/>
        </l:InteractionMessageTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="344*" />
            <ColumnDefinition Width="173*" />
        </Grid.ColumnDefinitions>


        <ListView x:Name="PTNKCD" ItemsSource="{Binding PTcombo}" Margin="16,10,10,10" >
            <ListView.View>
                <GridView ColumnHeaderToolTip="People">
                    <GridViewColumn Header="送信日" DisplayMemberBinding="{Binding DateSend}" />
                    <GridViewColumn Header="To" DisplayMemberBinding="{Binding EmployeeTo.Name}" />
                    <GridViewColumn Header="From" DisplayMemberBinding="{Binding EmployeeFromId.Name}" />
                    <GridViewColumn Header="タイトル" DisplayMemberBinding="{Binding Title}" />
                    <GridViewColumn Header="業務関連度" DisplayMemberBinding="{Binding Work.WorkRelation}" />
                </GridView>
            </ListView.View>
        </ListView>

        <StackPanel  Grid.Column="2">
            <TextBlock Margin="10" ><Run Text="業務関連度▼" Foreground="White" FontSize="15" /></TextBlock>

            <ComboBox x:Name="PTcombo" ItemsSource="{Binding Work}"  DisplayMemberPath="WorkRelation" SelectedValuePath="Id">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding SelectPTCommand}" CommandParameter="{Binding ElementName= PTcombo,Path=SelectedValue}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>

            </ComboBox>

            <Button Content="戻る" Margin="50,500,50,0" Grid.Column="1" Command="{Binding CloseCommand}"/>
        </StackPanel>

    </Grid>
</Window>

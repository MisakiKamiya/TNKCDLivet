<Window x:Class="TNKCDLivet.Views.CardCount"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:TNKCDLivet.Views"
        xmlns:vm="clr-namespace:TNKCDLivet.ViewModels"
       
        Title="CardCount" Height="720" Width="740">

    <Window.Background>
        <ImageBrush ImageSource = "../img/emoi_haikei.jpg" Stretch="UniformToFill"/>
    </Window.Background>
    
    <Window.DataContext>
        <vm:CardCountViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <l:InteractionMessageTrigger MessageKey="Close" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction/>
        </l:InteractionMessageTrigger>



        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="344*" />
            <ColumnDefinition Width="173*" />
        </Grid.ColumnDefinitions>


        <DataGrid Name="CardCounts" ItemsSource="{Binding TNKCD}" AutoGenerateColumns="False" CanUserAddRows="False" Margin="16,10,10,10">
            <DataGrid.Columns>
                <DataGridTextColumn Header="氏名" Binding="{Binding Employee.Name}" />
                <DataGridTextColumn Header="部署" Binding="{Binding Busyo.BusyoName}" />
                <DataGridTextColumn Header="課" Binding="{Binding Ka.KaName}" />
                <DataGridTextColumn Header="カード枚数" Binding="{Binding Title}" />
            </DataGrid.Columns>
        </DataGrid>


        <StackPanel Grid.Column="2">
            <ComboBox Width="140" SelectedIndex="0" Margin="20">
                <ComboBoxItem Content="氏名" />
            </ComboBox>

            <ComboBox Width="140" SelectedIndex="0" Margin="20">
                <ComboBoxItem Content="部署" />
            </ComboBox>

            <ComboBox Width="140" SelectedIndex="0" Margin="20">
                <ComboBoxItem Content="課" />
            </ComboBox>

            <Button Content="戻る" Margin="0,400,0,0" Grid.Column="1" Command="{Binding CloseCommand}"/>

        </StackPanel>
    </Grid>

</Window>
